<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lbt.yingx_lbt.dao.CategoryMapper">
    <resultMap id="res1" type="Category">
        <id column="cid" property="id"/>
        <result column="cname" property="name"/>
        <result column="clevels" property="levels"/>
        <result property="cparentId" column="parent_id"/>
        <association property="category" javaType="Category">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
    </resultMap>
    <!--           根据一级类别id获取该一级类别下的所有二级类别                 -->
    <select id="findAllSecondCategory" resultMap="res1">
        select c.id cid,c.name cname,c.levels clevels,c.parent_id cparentId,d.id did,d.name dname
        from yx_category c
        LEFT JOIN yx_category d on c.parent_id=d.id
        where c.parent_id=#{parentId}
        limit #{pageBean.ingore},#{pageBean.pageRow}
    </select>


    <!--   查询该一级类别下共有多少条二级类别      -->
    <select id="findAllSecondCount" resultType="java.lang.Integer">
        select count(*)
        from yx_category c
        LEFT JOIN yx_category d on c.parent_id=d.id
        where c.parent_id=#{parentId}
    </select>


    <select id="quertAllOne" resultType="com.lbt.yingx_lbt.po.CategorySelfPo">
        select c.id id,c.name cateName,c.levels levels,c.parent_id parentId
        from yx_category c where levels='1'
    </select>
    <select id="quertAllTwo" resultType="com.lbt.yingx_lbt.po.CategorySelfPo">
        select c.id id,c.name cateName,c.levels levels,c.parent_id parentId
        from yx_category c where parent_id=#{parentId}
    </select>
</mapper>